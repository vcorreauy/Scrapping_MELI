# -*- coding: utf-8 -*-
"""MELI_Scrapping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gqKL5LJIOI7sA4zi1302G_MK5G35vrX-
"""

# IMPORTO LIBRERIAS

import requests
from bs4 import BeautifulSoup
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import calendar
import time
from datetime import datetime
from statistics import mean
from matplotlib import pylab
from pylab import *
import re

# PAGINA DE MELI DE VENTA DE APARTAMENTOS EN MONTEVIDEO

link_busqueda='https://listado.mercadolibre.com.uy/inmuebles/apartamentos/venta/2-dormitorios/montevideo/_FULL*BATHROOMS_2-2_PARKING*LOTS_1-1#applied_filter_id%3Dstate%26applied_filter_name%3DUbicaci%C3%B3n%26applied_filter_order%3D6%26applied_value_id%3DTUxVUE1PTlo2MDIy%26applied_value_name%3DMontevideo%26applied_value_order%3D5%26applied_value_results%3D1387%26is_custom%3Dfalse'

r=requests.get(link_busqueda)
print(r.status_code)
soup= BeautifulSoup(r.content,'html.parser')

# SELECCIONO LOS DATOS QUE ME INTERESAN Y ARMO VARIABLES

# DIRECCION
direccion=soup.find_all('div', class_='ui-search-item__location-container-grid')
#print(direccion)

direcciones_lista=[]
for i in direccion:
    direcciones=i.get_text().split(",")[0]
    direcciones_lista.append(direcciones)

print(len(direcciones_lista))
print(direcciones_lista[0])

# BARRIO
barrio=soup.find_all('div', class_='ui-search-item__location-container-grid')
barrio_lista=[]

for i in barrio:
    #print(len(i))
    barrios=i.get_text().split(", ")
    if len(barrios) >=2:
        barrio_lista.append(barrios[1])
    else:
        barrio_lista.append(" ")

print(len(barrio_lista))
print(barrio_lista[0])

# METROS CUADRADOS
cualca=soup.find_all('ul', class_='ui-search-card-attributes ui-search-item__attributes-grid')
cualca_lista=[]
for i in cualca:
    cualca=i.get_text().split(" ")[2]
    cualca=cualca[5:]
    if "," in cualca:
     cualca = cualca.replace(",", ".")
     cualca_lista.append(float(cualca))
    elif cualca is None or not cualca:
     cualca=1
     cualca_lista.append(float(cualca))
    elif not cualca.isdigit():
     cualca =1
     cualca_lista.append(float(cualca))
    else:
    #print(cualca)
     cualca_lista.append(float(cualca))

print(len(cualca_lista))
print(type(cualca_lista[0]))
print(cualca_lista)

# NUMERO DE DORMITORIOS
nro_dorm=soup.find_all('ul', class_='ui-search-card-attributes ui-search-item__attributes-grid')
nro_dorm_lista=[]

for i in nro_dorm:
    nro_dorm=i.get_text().split(" ")[0]
    nro_dorm_lista.append(int(nro_dorm))


print(len(nro_dorm_lista))
print(type(nro_dorm_lista[0]))
print((nro_dorm_lista[0]))

# PRECIO

precio= soup.find_all('div', class_='ui-search-price ui-search-price--size-medium shops__price')
nro_precio=[]
#print(precio)

for i in precio:
    precios=i.get_text().split(" ")#[1]
    if len(precios) >=1:
        precios=precios[0]
        precios=re.findall(r'\D+|\d+',precios)
        if len(precios)>1:
            precios=precios[1]
        else:
            precios=precios[0]
        nro_precio.append((int(float(precios))))
    else:
        nro_precio.append(int(float(precios)))
    #print(precios)



print(len(nro_precio))
print(type(nro_precio[0]))
print(nro_precio[0])

# LINK DE LA PUBLICACION
link_posteo= soup.find_all('a', class_='ui-search-result__image shops__picturesStyles ui-search-link')
link_posteo= [i.get('href') for i in link_posteo]

print(len(link_posteo))
print((link_posteo[0]))

# NRO DE PAGINA INICIAL
#inicio=soup.find('span', class_='andes-pagination__link').text
inicio=soup.find('li', class_='andes-pagination__button andes-pagination__button--current').text
print(inicio)

# NRO-LINK DE PAGINA SIGUIENTE
siguiente=soup.find_all('a', attrs={"title":"Siguiente"})[0].get('href')
print(siguiente)

# NRO DE PAGINA FINAL
fin=soup.find('li', class_='andes-pagination__page-count')
fin=int(fin.text.split(" ")[1])
print(fin)

lista_direcciones=[]
lista_barrios=[]
lista_links=[]
lista_precios=[]
lista_metros_cuad=[]
lista_nro_dorm=[]

siguiente='https://listado.mercadolibre.com.uy/inmuebles/apartamentos/venta/2-dormitorios/montevideo/_FULL*BATHROOMS_2-2_PARKING*LOTS_1-1#applied_filter_id%3Dstate%26applied_filter_name%3DUbicaci%C3%B3n%26applied_filter_order%3D6%26applied_value_id%3DTUxVUE1PTlo2MDIy%26applied_value_name%3DMontevideo%26applied_value_order%3D5%26applied_value_results%3D1387%26is_custom%3Dfalse'
try:
    while True:

        r=requests.get(siguiente)
        if r.status_code==200:
            soup= BeautifulSoup(r.content,'html.parser')
            # DIRECCION
            direccion=soup.find_all('div', class_='ui-search-item__location-container-grid')
            #direcciones_lista=[]
            for i in direccion:
              direcciones=i.get_text().split(",")[0]
              lista_direcciones.append(direcciones)

            # BARRIO
            barrio=soup.find_all('div', class_='ui-search-item__location-container-grid')
            #barrio_lista=[]
            for i in barrio:
              barrios=i.get_text().split(", ")
              if len(barrios) >=2:
                lista_barrios.append(barrios[1])
              else:
                lista_barrios.append(" ")

            # LINK
            link_posteo= soup.find_all('a', class_='ui-search-result__image shops__picturesStyles ui-search-link')
            link_posteo= [i.get('href') for i in link_posteo]
            lista_links.extend(link_posteo)

            # PRECIO
            precio= soup.find_all('div', class_='ui-search-price ui-search-price--size-medium shops__price')
            for i in precio:
                precios=i.get_text().split(" ")#[1]
                if len(precios) >=1:
                    precios=precios[0]
                    precios=re.findall(r'\D+|\d+',precios)
                    if len(precios)>1:
                        precios=precios[1]
                    else:
                        precios=precios[0]
                    lista_precios.append((int(float(precios))))

                else:
                    lista_precios.append(int(float("0.0")))


            # METROS CUADRADOS
            cualca=soup.find_all('ul', class_='ui-search-card-attributes ui-search-item__attributes-grid')
            for i in cualca:
             cualca=i.get_text().split(" ")[2]
             cualca=cualca[5:]
             if "," in cualca:
              cualca = cualca.replace(",", ".")
              lista_metros_cuad.append(float(cualca))
             elif cualca is None or not cualca:
              cualca=1
              lista_metros_cuad.append(float(cualca))
             elif not cualca.isdigit():
              cualca =1
              lista_metros_cuad.append(float(cualca))
             else:
              #print(cualca)
              lista_metros_cuad.append(float(cualca))




            # NUMERO DE DORMITORIOS
            nro_dorm=soup.find_all('ul', class_='ui-search-card-attributes ui-search-item__attributes-grid')
            #nro_dorm_lista=[]

            for i in nro_dorm:
             nro_dorm=i.get_text().split(" ")[0]
             lista_nro_dorm.append(int(nro_dorm))



            #validar inicio y fin
            inicio=soup.find('span', class_='andes-pagination__link').text
            fin=soup.find('li', class_='andes-pagination__page-count')
            fin=int(fin.text.split(" ")[1])

        else:
            break

        print(inicio, fin)
        print(len(lista_direcciones),len(lista_barrios),len(lista_links),len(lista_precios),len(lista_metros_cuad),len(lista_nro_dorm))
        if inicio==fin:
            break
        #siguiente= soup.find_all('a', attrs={"class":'andes-pagination__link ui-search-link', "title":"siguiente"})[0].get('href')
        siguiente=soup.find_all('a', attrs={"title":"Siguiente"})[0].get('href')
except IndexError:
        pass

print(type(lista_precios[7]))
print(type(lista_metros_cuad[7]))
print(((lista_precios[7])))
print((lista_metros_cuad[0:5]))

# PRECIO MT2
precio_mt2 = [(x/y) for x, y in zip(lista_precios, lista_metros_cuad) if x is not None and y is not None and y != 0]

precio_mt2 = [round(y) for y in precio_mt2]

for i in precio_mt2:
 if i==" ":
  i=0
  precio_mt2.append(i)

print(len(precio_mt2))

# Creamos DF
a={'Barrio':lista_barrios,'Direccion':lista_direcciones,'Mts2':lista_metros_cuad,'Nro Dorm':lista_nro_dorm,'Precio USD':lista_precios,'Precio Mt2':precio_mt2,'Link':lista_links}
df=pd.DataFrame(a, index=list(range(1,len(lista_direcciones)+1)))
df.sort_values(by=['Precio Mt2'], ascending=True)

# Hacemos algunos cambios para no tener problemas con simbolos y letras
df = df.replace('í','i', regex=True)
df = df.replace('ó','o', regex=True)
df = df.replace('é','e', regex=True)
df = df.replace('á','a', regex=True)
df = df.replace('Á','a', regex=True)
df = df.replace('ú','u', regex=True)
df = df.replace('ñ','n', regex=True)
#print(df)

# Guardamos DF en un csv o excel
nombre_file=f"venta_apartamentos_montevideo_meli.xlsx"

df.to_excel(nombre_file,index=False)

# PARA DESCARGAR EL ARCHIVO GENERADO
from google.colab import files
files.download(nombre_file)

# Para ver toda la info completa de todas las columnas
pd.set_option('display.max_colwidth', None)

df

# CALCULOS

# Summary
df.describe()

# Precio promedio mt2
mt2_prom=round(df["Precio Mt2"].mean())
print(mt2_prom)

# APTO CON EL MT2 MAS CARO
df[df['Precio Mt2'] >= max(df['Precio Mt2'])]

# Obtener barrio en funcion de una condicion del precio
df.loc[df['Precio Mt2'] == max(df['Precio Mt2']), 'Barrio']

# Busqueda con mas de un filtro
filtro=df.loc[(df['Barrio'].str.contains('Punta Carretas')) & (df['Precio Mt2']< 3000)]
#print(len(filtro))
#print(filtro)
#df.loc[(df['Precio Mt2']< 2500)]

df.loc[(df['Barrio'].str.contains('Punta Carretas')) & (df['Precio Mt2']< 3000)]